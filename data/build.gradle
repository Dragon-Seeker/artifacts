buildscript {
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle' version '[6.0,6.2)'
}

apply plugin: 'org.spongepowered.mixin'

evaluationDependsOn(':common')
evaluationDependsOn(':neoforge')

minecraft {

    mappings channel: 'official', version: "${rootProject.minecraft_version}"

    copyIdeResources = true

    runs {
        data {
            ideaModule "${rootProject.name}.${project.name}.main"
            workingDirectory file('run')
            property 'neoforge.logging.markers', ''
            property 'neoforge.logging.console.level', 'debug'
            property 'fml.earlyprogresswindow', 'false'
            args '--mod', rootProject.mod_id
            args '--client', '--server', '--validate'
            args '--output', project(':common').file('src/generated/resources')
            args '--existing', project(':common').file('src/main/resources')

            mods {
                "${rootProject.mod_id}" {
                    source sourceSets.main
                    source project(':common').sourceSets.main
                    source project(':neoforge').sourceSets.main
                }
            }
        }
    }
}

//mixin {
//    config "mixins.${mod_id}.common.json"
//    config "mixins.${mod_id}.neoforge.json"
//}

dependencies {
    minecraft "net.neoforged:neoforge:${rootProject.neoforge_version}"
    implementation fg.deobf("dev.architectury:architectury-neoforge:$architectury_version")
    implementation(project(path: ':common', configuration: 'namedElements')) { transitive false }
    implementation(project(path: ':neoforge', configuration: 'namedElements')) { transitive false }

    implementation fg.deobf("be.florens:expandability-forge:${expandability_version}")
    implementation fg.deobf("me.shedaniel.cloth:cloth-config-neoforge:${rootProject.cloth_config_version}")
    implementation fg.deobf("io.wispforest:accessories-neoforge:${rootProject.accessories_version}")
}

jar.finalizedBy('reobfJar')

idea.module {
    excludeDirs += [ file('run') ]
}